% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngbsurv.R
\name{NGBSurvival}
\alias{NGBSurvival}
\title{Constructor for NGBoost survival models.}
\description{
NGBSurvival is a wrapper for the generic NGBoost class that facilitates
survival analysis.
Use this class if you want to predict an outcome that could take an infinite
number of (ordered) values, but right-censoring is present in the observed data.
}
\author{
Resul Akay
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{NGBSurvival$new()}}
\item \href{#method-fit}{\code{NGBSurvival$fit()}}
\item \href{#method-feature_importances}{\code{NGBSurvival$feature_importances()}}
\item \href{#method-plot_feature_importance}{\code{NGBSurvival$plot_feature_importance()}}
\item \href{#method-predict}{\code{NGBSurvival$predict()}}
\item \href{#method-staged_pred_dist}{\code{NGBSurvival$staged_pred_dist()}}
\item \href{#method-staged_pred}{\code{NGBSurvival$staged_pred()}}
\item \href{#method-set_params}{\code{NGBSurvival$set_params()}}
\item \href{#method-get_params}{\code{NGBSurvival$get_params()}}
\item \href{#method-pred_dist}{\code{NGBSurvival$pred_dist()}}
\item \href{#method-clone}{\code{NGBSurvival$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize NGBoost Survival model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$new(
  Dist = NULL,
  Score = NULL,
  Base = NULL,
  natural_gradient = TRUE,
  n_estimators = 500,
  learning_rate = 0.01,
  minibatch_frac = 1,
  col_sample = 1,
  verbose = TRUE,
  verbose_eval = 100,
  tol = 1e-04,
  random_state = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{Dist}}{Assumed distributional form of Y|X=x.}

\item{\code{Score}}{Rule to compare probabilistic predictions to the observed
data. A score from ngboost.scores, e.g. LogScore}

\item{\code{Base}}{Base learner to use in the boosting algorithm.
Any instantiated sklearn regressor, e.g. DecisionTreeRegressor()}

\item{\code{natural_gradient}}{Logical flag indicating whether the natural gradient should be used}

\item{\code{n_estimators}}{The number of boosting iterations to fit}

\item{\code{learning_rate}}{The learning rate}

\item{\code{minibatch_frac}}{The percent subsample of rows to use in each boosting iteration}

\item{\code{col_sample}}{The percent subsample of columns to use in each boosting iteration}

\item{\code{verbose}}{Flag indicating whether output should be printed during fitting}

\item{\code{verbose_eval}}{Increment (in boosting iterations) at which output should be printed}

\item{\code{tol}}{Numerical tolerance to be used in optimization}

\item{\code{random_state}}{Seed for reproducibility.}

\item{\code{A}}{Distribution from ngboost.distns, e.g. Normal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An NGBRegressor object that can be fit.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fit"></a>}}
\if{latex}{\out{\hypertarget{method-fit}{}}}
\subsection{Method \code{fit()}}{
Fits an NGBoost survival model to the data.
For additional parameters see ngboost.NGboost.fit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$fit(X, t, E, X_val = NULL, T_val = NULL, E_val = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{DataFrame object or List or numpy array of predictors (n x p)
in Numeric format}

\item{\code{t}}{DataFrame object or List or numpy array of times to event or
censoring (n) (floats).}

\item{\code{E}}{DataFrame object or List or numpy array of event indicators (n).
E(i) = 1 <=> T(i) is the time of an event, else censoring time}

\item{\code{X_val}}{DataFrame object or List or numpy array of validation-set
predictors in numeric format}

\item{\code{T_val}}{DataFrame object or List or validation-set times, in numeric
format if any}

\item{\code{E_val}}{DataFrame object or List or validation-set event idicators,
in numeric format if any}

\item{\code{...}}{Additonal parameters. For additional parameters see
ngboost.NGboost.fit}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-feature_importances"></a>}}
\if{latex}{\out{\hypertarget{method-feature_importances}{}}}
\subsection{Method \code{feature_importances()}}{
Return the feature importances for all parameters in the
distribution (the higher, the more important the feature).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$feature_importances()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_feature_importance"></a>}}
\if{latex}{\out{\hypertarget{method-plot_feature_importance}{}}}
\subsection{Method \code{plot_feature_importance()}}{
Plot feature importance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$plot_feature_importance()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\if{latex}{\out{\hypertarget{method-predict}{}}}
\subsection{Method \code{predict()}}{
Point prediction of Y at the points X=x
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$predict(X, max_iter = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{DataFrame object or List or numpy array of predictors (n x p)
in numeric Format}

\item{\code{max_iter}}{Get the prediction at the specified number of boosting
iterations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Numpy array of the estimates of Y
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-staged_pred_dist"></a>}}
\if{latex}{\out{\hypertarget{method-staged_pred_dist}{}}}
\subsection{Method \code{staged_pred_dist()}}{
Predict the conditional distribution of Y at the points X=x
at multiple boosting iterations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$staged_pred_dist(X, max_iter = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{DataFrame object or List or numpy array of predictors (n x p)
in numeric Format}

\item{\code{max_iter}}{Get the prediction at the specified number of boosting
iterations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of NGBoost distribution objects, one per boosting stage
up to max_iter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-staged_pred"></a>}}
\if{latex}{\out{\hypertarget{method-staged_pred}{}}}
\subsection{Method \code{staged_pred()}}{
Point prediction of Y at the points X=x at multiple boosting
iterations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$staged_pred(X, max_iter = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{DataFrame object or List or numpy array of predictors (n x p)
in numeric Format}

\item{\code{max_iter}}{Get the prediction at the specified number of boosting
iterations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of NGBoost distribution objects, one per boosting stage
up to max_iter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_params"></a>}}
\if{latex}{\out{\hypertarget{method-set_params}{}}}
\subsection{Method \code{set_params()}}{
Set the parameters of this estimator.
The method works on simple estimators as well as on nested objects
(such as :class:\code{~sklearn.pipeline.Pipeline}). The latter have
parameters of the form \verb{<component>__<parameter>} so that it's
possible to update each component of a nested object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$set_params(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{dict (a named R list). Estimator parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self : estimator instance. Estimator instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_params"></a>}}
\if{latex}{\out{\hypertarget{method-get_params}{}}}
\subsection{Method \code{get_params()}}{
Get parameters for this estimator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$get_params(deep = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{bool, default = TRUE
If True, will return the parameters for this estimator and
contained subobjects that are estimators.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
params. A dict (R list). Parameter names mapped to their values.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pred_dist"></a>}}
\if{latex}{\out{\hypertarget{method-pred_dist}{}}}
\subsection{Method \code{pred_dist()}}{
Predict the conditional distribution of Y at the points X=x
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$pred_dist(X, max_iter = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{DataFrame object or List or numpy array of predictors (n x p) in
numeric format.}

\item{\code{max_iter}}{get the prediction at the specified number of boosting
iterations.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A NGBoost distribution object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NGBSurvival$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
